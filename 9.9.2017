
import time
def int_from_bin(data=''):
    return sum([int(data[::-1][x])*2**x for x in range(0, len(data))])
def get_boxes(length = 1):
    data = ''.join(['0' for i in range(length)])
    return [data[:-int(len(str(i)))]+str(i) for i in range(int(data.replace('0', '9'))+1)]
start_time = time.time()
print(get_boxes(10))
end_time = time.time()
print("Taken Time To Perform This: ", end_time - start_time)

def D3_matrix_det(matrix=[[], []]):
    row_len = [len(x) for x in matrix]
    order = row_len[0] if row_len[0] == matrix.__len__() else 0
    offset = 0
    main_matrix_val = 0
    if order:
        for i in matrix[0]:
            val = int(i) * (-1) ** offset
            num = [i]
            for j in matrix[1:]:
                num.append(j[:offset] + j[offset + 1:])
            if num[1:].__len__() == 2:
                num = num[1:]
                val *= (int(num[0][0]) * int(num[1][1])) - (int(num[0][1]) * int(num[1][0]))
                main_matrix_val += val
            else:
                main_matrix_val += val * D3_matrix_det(num[1:])
            offset += 1
    return main_matrix_val

def factorial(num=0):
    while num != 0:
        return num * factorial(num-1)
    return 1
